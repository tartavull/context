name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix (Unix)
        if: runner.os != 'Windows'
        uses: DeterminateSystems/nix-installer-action@v14

      - name: Setup Nix cache (Unix)
        if: runner.os != 'Windows'
        uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Setup Node.js and pnpm (Windows)
        if: runner.os == 'Windows'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm (Windows)
        if: runner.os == 'Windows'
        run: npm install -g pnpm

      - name: Setup Windows build tools
        if: runner.os == 'Windows'
        run: |
          npm install -g node-gyp
          npm config set msvs_version 2022
        continue-on-error: true

      - name: Install dependencies (Unix)
        if: runner.os != 'Windows'
        run: nix develop --command pnpm install

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          pnpm install
          npx electron-rebuild

      - name: Run linter (Unix)
        if: runner.os != 'Windows'
        run: nix develop --command pnpm lint

      - name: Run linter (Windows)
        if: runner.os == 'Windows'
        run: pnpm lint

      - name: Check formatting (Unix)
        if: runner.os != 'Windows'
        run: nix develop --command pnpm format:check

      - name: Check formatting (Windows)
        if: runner.os == 'Windows'
        run: pnpm format:check

      - name: Build application (Unix)
        if: runner.os != 'Windows'
        run: nix develop --command pnpm build

      - name: Build application (Windows)
        if: runner.os == 'Windows'
        run: pnpm build

      - name: Test packaging (Unix)
        if: runner.os != 'Windows'
        run: |
          nix develop --command bash -c "
            # Just test that packaging works, don't upload
            pnpm package --dir --publish never
          "
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test packaging (Windows)
        if: runner.os == 'Windows'
        run: |
          # Just test that packaging works, don't upload
          pnpm package --dir --publish never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 